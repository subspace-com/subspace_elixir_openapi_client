# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule SubspaceProductAPI.Connection do
  @moduledoc """
  Handle Tesla connections for SubspaceProductAPI.
  """

  use Tesla

  # Add any middleware here (authentication)
  plug Tesla.Middleware.BaseUrl, "https://api.subspace.com"
  plug Tesla.Middleware.Headers, [{"user-agent", "Elixir"}]
  plug Tesla.Middleware.EncodeJson, engine: Poison

  @scopes [
    "accelerators:read", # allows reading details about provisioned PacketAccelerators
    "accelerators:write", # allows administration of PacketAccelerators
    "console:access", # allows access to the console
    "sipteleport:read", # allows reading details about provisioned SIPTeleport
    "sipteleport:write", # allows administration of SIPTeleport
    "projects:read", # allows reading details about projects
    "webrtccdn:access", # allows administration of WebRTC-CDN
    "rtpspeed:read", # allows reading details about rtpspeed
    "rtpspeed:write" # allows administration of rtpspeed
  ]

  @doc """
  Configure a client connection using a provided OAuth2 token as a Bearer token

  ## Parameters

  - token (String): Bearer token

  ## Returns

  Tesla.Env.client
  """
  @spec new(String.t) :: Tesla.Env.client
  def new(token) when is_binary(token) do
    Tesla.client([
      {Tesla.Middleware.Headers,  [{"authorization", "Bearer #{token}"}]}
    ])
  end

  @doc """
  Configure a client connection using a function which yields a Bearer token.

  ## Parameters

  - token_fetcher (function arity of 1): Callback which provides an OAuth2 token
    given a list of scopes

  ## Returns

  Tesla.Env.client
  """
  @spec new(((list(String.t)) -> String.t)) :: Tesla.Env.client
  def new(token_fetcher) when is_function(token_fetcher) do
    token_fetcher.(@scopes)
    |> new
  end
  @doc """
  Configure an authless client connection

  # Returns

  Tesla.Env.client
  """
  @spec new() :: Tesla.Env.client
  def new do
    Tesla.client([])
  end
end
